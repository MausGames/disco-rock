///////////////////////////////////////////////
//*-----------------------------------------*//
//| Auto-Generated by the Core Engine       |//
//| Direct modifications may be overwritten |//
//*-----------------------------------------*//
///////////////////////////////////////////////
#include "main.h"


// ****************************************************************
// project settings
const coreChar* const CoreApp::Settings::Name                          = "Disco Rock";
const coreChar* const CoreApp::Settings::Version                       = "1.5.0";
const coreChar* const CoreApp::Settings::Identifier                    = "at.maus-games.disco-rock";
const coreChar* const CoreApp::Settings::Creator                       = "Martin Mauersics";
const coreChar* const CoreApp::Settings::Year                          = "2013";
const coreChar* const CoreApp::Settings::Website                       = "https://www.maus-games.at";
const coreChar* const CoreApp::Settings::IconPath                      = "data/textures/game_icon.webp";
const coreChar* const CoreApp::Settings::CursorPath                    = "data/textures/default_cursor.webp";
const coreBool        CoreApp::Settings::UserManagement                = false;
const coreDouble      CoreApp::Settings::System::AspectRatio           = 16.0/9.0;
const coreUint8       CoreApp::Settings::Graphics::DepthSize           = 24u;
const coreUint8       CoreApp::Settings::Graphics::StencilSize         = 0u;
const coreBool        CoreApp::Settings::Graphics::AlphaChannel        = false;
const coreBool        CoreApp::Settings::Graphics::DoubleBuffer        = true;
const coreBool        CoreApp::Settings::Graphics::StereoRender        = false;
const coreUint32      CoreApp::Settings::Platform::SteamAppID[2]       = {0u, 0u};
const coreChar* const CoreApp::Settings::Platform::EpicProductID       = NULL;
const coreChar* const CoreApp::Settings::Platform::EpicSandboxID   [3] = {NULL, NULL, NULL};
const coreChar* const CoreApp::Settings::Platform::EpicDeploymentID[3] = {NULL, NULL, NULL};
const coreChar* const CoreApp::Settings::Platform::EpicClientID        = NULL;
const coreChar* const CoreApp::Settings::Platform::EpicClientSecret    = NULL;

coreBool CoreApp::Settings::IsDemo() {return false;}


// ****************************************************************
// setup the application
void CoreApp::Setup()
{
    Core::Manager::Resource->Load<coreModel>  ("default_cube.md3z",        CORE_RESOURCE_UPDATE_AUTO,   "data/models/default_cube.md3z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_blue.md5z",          CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_blue.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_blue_straw.md5z",    CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_blue_straw.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_blue_glass.md5z",    CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_blue_glass.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_cola.md5z",          CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_cola.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_mojito.md5z",        CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_mojito.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_mojito_straw.md5z",  CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_mojito_straw.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_sunrise.md5z",       CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_sunrise.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("drink_sunrise_straw.md5z", CORE_RESOURCE_UPDATE_AUTO,   "data/models/drink_sunrise_straw.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("ray.md5z",                 CORE_RESOURCE_UPDATE_AUTO,   "data/models/ray.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);
    Core::Manager::Resource->Load<coreModel>  ("rock.md5z",                CORE_RESOURCE_UPDATE_AUTO,   "data/models/rock.md5z", CORE_MODEL_LOAD_NO_CLUSTERS);

    Core::Manager::Resource->Load<coreTexture>("background.webp",          CORE_RESOURCE_UPDATE_AUTO,   "data/textures/background.webp");
    Core::Manager::Resource->Load<coreTexture>("background_norm.webp",     CORE_RESOURCE_UPDATE_AUTO,   "data/textures/background_norm.webp", CORE_TEXTURE_LOAD_NO_COMPRESS);
    Core::Manager::Resource->Load<coreTexture>("button_ok.webp",           CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_ok.webp");
    Core::Manager::Resource->Load<coreTexture>("button_cancel.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_cancel.webp");
    Core::Manager::Resource->Load<coreTexture>("button_login.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_login.webp");
    Core::Manager::Resource->Load<coreTexture>("button_move.webp",         CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_move.webp");
    Core::Manager::Resource->Load<coreTexture>("button_jump.webp",         CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_jump.webp");
    Core::Manager::Resource->Load<coreTexture>("button_pause.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_pause.webp");
    Core::Manager::Resource->Load<coreTexture>("button_play.webp",         CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_play.webp");
    Core::Manager::Resource->Load<coreTexture>("button_score.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_score.webp");
    Core::Manager::Resource->Load<coreTexture>("button_time.webp",         CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_time.webp");
    Core::Manager::Resource->Load<coreTexture>("button_trophy.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_trophy.webp");
    Core::Manager::Resource->Load<coreTexture>("button_config.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_config.webp");
    Core::Manager::Resource->Load<coreTexture>("button_scroll.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_scroll.webp");
    Core::Manager::Resource->Load<coreTexture>("button_logout.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/button_logout.webp");
    Core::Manager::Resource->Load<coreTexture>("drink_mojito.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/drink_mojito.webp");
    Core::Manager::Resource->Load<coreTexture>("drink_sunrise.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/drink_sunrise.webp");
    Core::Manager::Resource->Load<coreTexture>("drink_citrus.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/drink_citrus.webp");
    Core::Manager::Resource->Load<coreTexture>("drink_blue.webp",          CORE_RESOURCE_UPDATE_AUTO,   "data/textures/drink_blue.webp");
    Core::Manager::Resource->Load<coreTexture>("drink_cola.webp",          CORE_RESOURCE_UPDATE_AUTO,   "data/textures/drink_cola.webp");
    Core::Manager::Resource->Load<coreTexture>("drink_cola_glass.webp",    CORE_RESOURCE_UPDATE_AUTO,   "data/textures/drink_cola_glass.webp");
    Core::Manager::Resource->Load<coreTexture>("effect_ground.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/effect_ground.webp", CORE_TEXTURE_LOAD_NO_COMPRESS);
    Core::Manager::Resource->Load<coreTexture>("effect_particle.webp",     CORE_RESOURCE_UPDATE_AUTO,   "data/textures/effect_particle.webp", CORE_TEXTURE_LOAD_NO_COMPRESS);
    Core::Manager::Resource->Load<coreTexture>("game_logo.webp",           CORE_RESOURCE_UPDATE_AUTO,   "data/textures/game_logo.webp");
    Core::Manager::Resource->Load<coreTexture>("gamejolt_logo.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/gamejolt_logo.webp");
    Core::Manager::Resource->Load<coreTexture>("gamejolt_jolt.webp",       CORE_RESOURCE_UPDATE_AUTO,   "data/textures/gamejolt_jolt.webp");
    Core::Manager::Resource->Load<coreTexture>("icon_load.webp",           CORE_RESOURCE_UPDATE_AUTO,   "data/textures/icon_load.webp");
    Core::Manager::Resource->Load<coreTexture>("icon_audio_1.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/icon_audio_1.webp");
    Core::Manager::Resource->Load<coreTexture>("icon_audio_2.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/icon_audio_2.webp");
    Core::Manager::Resource->Load<coreTexture>("icon_success.webp",        CORE_RESOURCE_UPDATE_AUTO,   "data/textures/icon_success.webp");
    Core::Manager::Resource->Load<coreTexture>("icon_trophy.webp",         CORE_RESOURCE_UPDATE_AUTO,   "data/textures/icon_trophy.webp");
    Core::Manager::Resource->Load<coreTexture>("maus_logo.webp",           CORE_RESOURCE_UPDATE_AUTO,   "data/textures/maus_logo.webp");
    Core::Manager::Resource->Load<coreTexture>("rock.webp",                CORE_RESOURCE_UPDATE_AUTO,   "data/textures/rock.webp");
    Core::Manager::Resource->Load<coreTexture>("trophy_1.webp",            CORE_RESOURCE_UPDATE_AUTO,   "data/textures/trophy_1.webp");
    Core::Manager::Resource->Load<coreTexture>("trophy_2.webp",            CORE_RESOURCE_UPDATE_AUTO,   "data/textures/trophy_2.webp");

    Core::Manager::Resource->Load<coreShader> ("border.frag",              CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/border.frag");
    Core::Manager::Resource->Load<coreShader> ("color.frag",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/color.frag");
    Core::Manager::Resource->Load<coreShader> ("color_bar.frag",           CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/color_bar.frag");
    Core::Manager::Resource->Load<coreShader> ("color_icon.frag",          CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/color_icon.frag");
    Core::Manager::Resource->Load<coreShader> ("drink.vert",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/drink.vert");
    Core::Manager::Resource->Load<coreShader> ("drink.frag",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/drink.frag");
    Core::Manager::Resource->Load<coreShader> ("fill.vert",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/fill.vert");
    Core::Manager::Resource->Load<coreShader> ("fill.frag",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/fill.frag");
    Core::Manager::Resource->Load<coreShader> ("floor.vert",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/floor.vert", CORE_SHADER_OPTION_NO_ROTATION);
    Core::Manager::Resource->Load<coreShader> ("floor.frag",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/floor.frag");
    Core::Manager::Resource->Load<coreShader> ("floor_plate.vert",         CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/floor_plate.vert", CORE_SHADER_OPTION_NO_ROTATION);
    Core::Manager::Resource->Load<coreShader> ("floor_plate.frag",         CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/floor_plate.frag");
    Core::Manager::Resource->Load<coreShader> ("glass.vert",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/glass.vert");
    Core::Manager::Resource->Load<coreShader> ("glass.frag",               CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/glass.frag");
    Core::Manager::Resource->Load<coreShader> ("glass_cola.frag",          CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/glass_cola.frag");
    Core::Manager::Resource->Load<coreShader> ("ray.vert",                 CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/ray.vert");
    Core::Manager::Resource->Load<coreShader> ("ray.frag",                 CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/ray.frag");
    Core::Manager::Resource->Load<coreShader> ("rock.vert",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/rock.vert");
    Core::Manager::Resource->Load<coreShader> ("rock.frag",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/rock.frag");
    Core::Manager::Resource->Load<coreShader> ("shadow.vert",              CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/decal.vert", CORE_SHADER_OPTION_NO_ROTATION);
    Core::Manager::Resource->Load<coreShader> ("shadow.frag",              CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/shadow.frag");
    Core::Manager::Resource->Load<coreShader> ("simple_2d.vert",           CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/simple_2d.vert");
    Core::Manager::Resource->Load<coreShader> ("trap.vert",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/trap.vert", CORE_SHADER_OPTION_NO_ROTATION);
    Core::Manager::Resource->Load<coreShader> ("trap.frag",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/trap.frag");
    Core::Manager::Resource->Load<coreShader> ("wave.vert",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/decal.vert");
    Core::Manager::Resource->Load<coreShader> ("wave.frag",                CORE_RESOURCE_UPDATE_MANUAL, "data/shaders/wave.frag");

    Core::Manager::Resource->Load<coreSound>  ("achieve.opus",             CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/achieve.opus", CORE_SOUND_LOAD_MULAW);
    Core::Manager::Resource->Load<coreSound>  ("bump.opus",                CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/bump.opus", CORE_SOUND_LOAD_MULAW);
    Core::Manager::Resource->Load<coreSound>  ("clink.opus",               CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/clink.opus", CORE_SOUND_LOAD_MULAW);
    Core::Manager::Resource->Load<coreSound>  ("dust.opus",                CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/dust.opus", CORE_SOUND_LOAD_MULAW);
    Core::Manager::Resource->Load<coreSound>  ("flash.opus",               CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/flash.opus", CORE_SOUND_LOAD_MULAW);
    Core::Manager::Resource->Load<coreSound>  ("menu.opus",                CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/menu.opus", CORE_SOUND_LOAD_MULAW);
    Core::Manager::Resource->Load<coreSound>  ("trap.opus",                CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/trap.opus");
    Core::Manager::Resource->Load<coreSound>  ("woosh.opus",               CORE_RESOURCE_UPDATE_AUTO,   "data/sounds/woosh.opus", CORE_SOUND_LOAD_MULAW);

    Core::Manager::Resource->Load<coreFont>   ("gomarice_rocks.ttf",       CORE_RESOURCE_UPDATE_AUTO,   "data/fonts/gomarice_rocks.ttf");

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("floor_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("floor.vert")
        ->AttachShader("floor.frag")
        ->BindAttribute("a_v2Position", BACK_SHADER_ATTRIBUTE_POSITION_NUM)
        ->BindAttribute("a_v4Color",    BACK_SHADER_ATTRIBUTE_COLOR_NUM)
        ->BindAttribute("a_v1Height",   BACK_SHADER_ATTRIBUTE_HEIGHT_NUM)
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("fill_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("fill.vert")
        ->AttachShader("fill.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("drink_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("drink.vert")
        ->AttachShader("drink.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("shadow_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("shadow.vert")
        ->AttachShader("shadow.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("glass_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("glass.vert")
        ->AttachShader("glass.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("glass_cola_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("glass.vert")
        ->AttachShader("glass_cola.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("2d_simple_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("simple_2d.vert")
        ->AttachShader("default_2d.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("2d_color_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("simple_2d.vert")
        ->AttachShader("color.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("2d_border_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("simple_2d.vert")
        ->AttachShader("border.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("2d_color_icon_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("simple_2d.vert")
        ->AttachShader("color_icon.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("2d_color_bar_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("simple_2d.vert")
        ->AttachShader("color_bar.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("floor_plate_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("floor_plate.vert")
        ->AttachShader("floor_plate.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("ray_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("ray.vert")
        ->AttachShader("ray.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("rock_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("rock.vert")
        ->AttachShader("rock.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("wave_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("wave.vert")
        ->AttachShader("wave.frag")
        ->Finish();

    d_cast<coreProgram*>(Core::Manager::Resource->Load<coreProgram>("trap_program", CORE_RESOURCE_UPDATE_AUTO, NULL)->GetRawResource())
        ->AttachShader("trap.vert")
        ->AttachShader("trap.frag")
        ->Finish();
}